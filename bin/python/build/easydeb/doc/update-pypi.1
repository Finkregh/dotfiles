.TH update-pypi 1 
.SH NAME
update-pypi tool to enable or disable python eggs installed using easy-deb
.SH SYNOPSIS
.B update-pypi
[options] (module-name | show | update)

.SH DESCRIPTION
easy\-deb (1) creates packages that install python modules into python eggs placed in /usr/lib/python<VERSION>/pypi-packages.
That directory is not on sys.path so /usr/lib/python<VERSION>/site-packages/easy_deb.pth is created with one line:
.nf
/usr/lib/python<VERSION>/pypi-packages
.fi
That line adds /usr/lib/python<VERSION>/pypi-packages to sys.path.
.br
Eggs installed into /usr/lib/python<VERSION>/pypi-packages can now be "required" using pkg_resources.require() but they can't be "imported" using the import statement because they are not on sys.path themself.
To let users just "import" a module from a python egg, the egg path must be added to sys.path (adding a line to easy_deb.pth). 
.br
update-pypi is a tool that manages egg addition and removal from easy_deb.pth in a convenient way.
.br
An "Available" egg is an egg that can be used by "requiring" it.
.br
An "Installed" egg ia an egg that can be used by just "importing" it.
.SH OPTIONS
.TP
.B \-h, --help            
show this help message and exit
.TP
.B \-a, --add
Add egg to sys.path
.TP
.B \-r, --remove
Add egg to sys.path

.SH EXAMPLE
To install module "graph":

.nf
$ easy-deb -v2.4 graph -D /tmp/
$ cd /tmp/deb-pkg-graph0.4/graph-0.4
$ fakeroot debian/rules binary
$ sudo dpkg -i ../*.deb

$ update-pypi -a graph
.fi

.SH FILES
.TP
.B /usr/share/pypi/python?.?/pths/{available,installed}
The installed and available eggs are recorded into this dirs.


.SH THANKS
 
 Goolge ( Google SoC, Open Source Program, Chris, Natalie, ... )
 
 Ubuntu ( Matthias (doko) Klose, Matt (mdz) Zimmerman, 
    Natalie Woo, and all the other great people there )
 
 Phillip J. Eby ( for the great setuptools )
 
 Agnese ( For all her support and patience )

.SH "SEE ALSO"
easy-deb (1)
